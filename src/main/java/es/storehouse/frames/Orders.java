/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.storehouse.frames;

import es.storehouse.models.Order;
import es.storehouse.models.Product;
import es.storehouse.models.Provider;
import es.storehouse.models.StoreException;
import es.storehouse.mysql.MySQLOrderDAO;
import es.storehouse.mysql.MySQLProductDAO;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dquintero
 */
public final class Orders extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    MySQLOrderDAO orderDAO;
    Order o;

    /**
     * Creates new form Orders
     */
    public Orders() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderTable = new RSMaterialComponent.RSTableMetroCustom(){
            public boolean isCellEditable(int row, int column){
                return false;
            }

        };
        txt_searchProduct3 = new RSMaterialComponent.RSTextFieldMaterial();
        btn_searchProduct3 = new RSMaterialComponent.RSButtonIconTwo();
        bll_totalPrice3 = new javax.swing.JLabel();
        pnl_totalPrice3 = new javax.swing.JPanel();
        txt_totalPrice3 = new javax.swing.JLabel();
        txt_productName = new necesario.TextField();
        txt_productId = new necesario.TextField();
        txt_productStock = new necesario.TextField();
        txt_buyPrice = new necesario.TextField();
        txt_provider = new necesario.TextField();
        btn_addProduct = new newscomponents.RSButtonBigIcon_new();
        btn_deleteProduct = new newscomponents.RSButtonBigIcon_new();
        btn_cancelSale = new newscomponents.RSButtonBigIcon_new();
        dateChooser = new newscomponents.RSDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_productSaleAmount = new necesario.TextField();
        btn_generatePurchase = new newscomponents.RSButtonIcon_new();

        setClosable(true);
        setTitle("Pedidos");

        jPanel5.setBackground(new java.awt.Color(108, 140, 110));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Cantidad", "Precio de Compra", "Total", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        orderTable.setBackgoundHead(new java.awt.Color(32, 51, 46));
        orderTable.setBackgoundHover(new java.awt.Color(32, 51, 46));
        orderTable.setColorPrimaryText(new java.awt.Color(32, 51, 46));
        orderTable.setColorSecundaryText(new java.awt.Color(32, 51, 46));
        orderTable.setFont(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        orderTable.setFontHead(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        orderTable.setFontRowHover(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        orderTable.setFontRowSelect(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        orderTable.setSelectionBackground(new java.awt.Color(108, 140, 110));
        orderTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderTableKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(orderTable);

        txt_searchProduct3.setForeground(new java.awt.Color(108, 140, 110));
        txt_searchProduct3.setText("Nombre de Producto....");
        txt_searchProduct3.setToolTipText("Presiona ENTER para buscar");
        txt_searchProduct3.setColorMaterial(new java.awt.Color(108, 140, 110));
        txt_searchProduct3.setPhColor(new java.awt.Color(108, 140, 110));
        txt_searchProduct3.setPlaceholder("Nombre de Producto...");
        txt_searchProduct3.setSelectionColor(new java.awt.Color(108, 140, 110));
        txt_searchProduct3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_searchProduct3MouseClicked(evt);
            }
        });
        txt_searchProduct3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchProduct3KeyReleased(evt);
            }
        });

        btn_searchProduct3.setBackground(new java.awt.Color(32, 51, 46));
        btn_searchProduct3.setBackgroundHover(new java.awt.Color(32, 51, 46));
        btn_searchProduct3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_searchProduct3.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        btn_searchProduct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchProduct3ActionPerformed(evt);
            }
        });

        bll_totalPrice3.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        bll_totalPrice3.setForeground(new java.awt.Color(108, 140, 110));
        bll_totalPrice3.setText("Total a Pagar:");

        pnl_totalPrice3.setBackground(new java.awt.Color(0, 0, 0));

        txt_totalPrice3.setFont(new java.awt.Font("Roboto", 1, 40)); // NOI18N
        txt_totalPrice3.setForeground(new java.awt.Color(0, 153, 0));
        txt_totalPrice3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        txt_totalPrice3.setText("0");

        javax.swing.GroupLayout pnl_totalPrice3Layout = new javax.swing.GroupLayout(pnl_totalPrice3);
        pnl_totalPrice3.setLayout(pnl_totalPrice3Layout);
        pnl_totalPrice3Layout.setHorizontalGroup(
            pnl_totalPrice3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_totalPrice3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_totalPrice3, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_totalPrice3Layout.setVerticalGroup(
            pnl_totalPrice3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_totalPrice3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_totalPrice3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        txt_productName.setEditable(false);
        txt_productName.setForeground(new java.awt.Color(32, 51, 46));
        txt_productName.setText("Producto");
        txt_productName.setToolTipText("");
        txt_productName.setEnabled(false);
        txt_productName.setPlaceholder("Producto");
        txt_productName.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_productId.setEditable(false);
        txt_productId.setForeground(new java.awt.Color(32, 51, 46));
        txt_productId.setText("ID");
        txt_productId.setEnabled(false);
        txt_productId.setPlaceholder("ID");
        txt_productId.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_productStock.setEditable(false);
        txt_productStock.setForeground(new java.awt.Color(32, 51, 46));
        txt_productStock.setText("Stock");
        txt_productStock.setEnabled(false);
        txt_productStock.setPlaceholder("Stock");
        txt_productStock.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_buyPrice.setEditable(false);
        txt_buyPrice.setForeground(new java.awt.Color(32, 51, 46));
        txt_buyPrice.setText("Precio de Compra");
        txt_buyPrice.setEnabled(false);
        txt_buyPrice.setPlaceholder("Precio de Venta");
        txt_buyPrice.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_provider.setEditable(false);
        txt_provider.setForeground(new java.awt.Color(32, 51, 46));
        txt_provider.setText("Proveedor");
        txt_provider.setEnabled(false);
        txt_provider.setPlaceholder("Proveedor");
        txt_provider.setSelectionColor(new java.awt.Color(32, 51, 46));

        btn_addProduct.setBackground(new java.awt.Color(38, 169, 94));
        btn_addProduct.setText("AÃ±adir Producto");
        btn_addProduct.setBgHover(new java.awt.Color(38, 169, 94));
        btn_addProduct.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ADD);
        btn_addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addProductActionPerformed(evt);
            }
        });

        btn_deleteProduct.setBackground(new java.awt.Color(241, 196, 15));
        btn_deleteProduct.setText("Retirar Producto");
        btn_deleteProduct.setBgHover(new java.awt.Color(241, 196, 15));
        btn_deleteProduct.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.REMOVE_CIRCLE);
        btn_deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteProductActionPerformed(evt);
            }
        });

        btn_cancelSale.setBackground(new java.awt.Color(168, 1, 1));
        btn_cancelSale.setText("Cancelar Pedido");
        btn_cancelSale.setBgHover(new java.awt.Color(168, 1, 1));
        btn_cancelSale.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CANCEL);
        btn_cancelSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelSaleActionPerformed(evt);
            }
        });

        dateChooser.setBackground(new java.awt.Color(35, 35, 36));
        dateChooser.setBgColor(new java.awt.Color(35, 35, 36));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(35, 35, 36));
        jLabel1.setText("Fecha de Venta:");

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(35, 35, 36));
        jLabel2.setText("Cantidad:");

        txt_productSaleAmount.setForeground(new java.awt.Color(32, 51, 46));
        txt_productSaleAmount.setToolTipText("");
        txt_productSaleAmount.setPlaceholder("Digite la cantidad");
        txt_productSaleAmount.setSelectionColor(new java.awt.Color(32, 51, 46));

        btn_generatePurchase.setBackground(new java.awt.Color(38, 169, 94));
        btn_generatePurchase.setText("Generar Pedido");
        btn_generatePurchase.setBackgroundHover(new java.awt.Color(38, 169, 94));
        btn_generatePurchase.setFont(new java.awt.Font("Roboto Bold", 1, 24)); // NOI18N
        btn_generatePurchase.setIconTextGap(10);
        btn_generatePurchase.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ADD_SHOPPING_CART);
        btn_generatePurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generatePurchaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 369, Short.MAX_VALUE)
                        .addComponent(bll_totalPrice3)
                        .addGap(51, 51, 51)
                        .addComponent(btn_generatePurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(pnl_totalPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txt_searchProduct3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_searchProduct3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_productId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_productName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_provider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_productStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_productSaleAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btn_addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_deleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_cancelSale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txt_productId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_provider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_productStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_deleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_cancelSale, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_productSaleAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_searchProduct3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(btn_searchProduct3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(215, 215, 215)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(pnl_totalPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bll_totalPrice3)
                            .addComponent(btn_generatePurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void orderTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderTableKeyReleased
        // TODO add your handling code here:
        model = (DefaultTableModel) orderTable.getModel();
        int[] rows = orderTable.getSelectedRows();
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            removeProduct(orderTable, model, rows);
        }
    }//GEN-LAST:event_orderTableKeyReleased

    private void btn_searchProduct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchProduct3ActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_btn_searchProduct3ActionPerformed

    private void btn_addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addProductActionPerformed
        // TODO add your handling code here:

        if (txt_productSaleAmount.getText().isEmpty() || Integer.parseInt(txt_productSaleAmount.getText()) == 0) {
            JOptionPane.showMessageDialog(null, "Ingrese la cantidad a vender", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {

            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
            model = (DefaultTableModel) orderTable.getModel();

            int stock = Integer.parseInt(txt_productSaleAmount.getText());
            Double sellPrice = Double.parseDouble(txt_buyPrice.getText());
            Object[] data = new Object[6];
            data[0] = txt_productId.getText();
            data[1] = txt_productName.getText();
            data[2] = txt_productSaleAmount.getText();
            data[3] = txt_buyPrice.getText();
            data[4] = (stock) * (sellPrice);
            data[5] = dateFormat.format(dateChooser.getDate());

            model.addRow(data);

            Double totalPrice = 0.0;
            Double columnValue = 0.0;

            if (orderTable.getRowCount() > 0) {
                for (int i = 0; i < orderTable.getRowCount(); i++) {
                    columnValue = Double.parseDouble(orderTable.getValueAt(i, 4).toString());
                    totalPrice += columnValue;

                }

            }
            txt_totalPrice3.setText(String.valueOf(totalPrice));
            clearTextFields();

        }
    }//GEN-LAST:event_btn_addProductActionPerformed

    private void btn_deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteProductActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) orderTable.getModel();
        int[] rows = orderTable.getSelectedRows();
        removeProduct(orderTable, model, rows);
        clearTextFields();
    }//GEN-LAST:event_btn_deleteProductActionPerformed

    private void btn_cancelSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelSaleActionPerformed
        // TODO add your handling code here:
        model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0);
        clearTextFields();
        txt_totalPrice3.setText("0");
    }//GEN-LAST:event_btn_cancelSaleActionPerformed

    void clearTextFields() {
        txt_productId.setText("");
        txt_productName.setText("");
        txt_productSaleAmount.setText("");
        txt_productStock.setText("");
        txt_provider.setText("");
        txt_searchProduct3.setText("");
        txt_buyPrice.setText("");
    }

    private void removeProduct(JTable table, DefaultTableModel model, int[] rows) {
        Double actualPrice = 0.0;
        rows = table.getSelectedRows();
        if (table.getSelectedRow() >= 0) {
            for (int i = 0; i < rows.length; i++) {
                model.removeRow(rows[i]);
            }
        }
        for (int i = 0; i < table.getRowCount(); i++) {
            Double priceRemove = Double.parseDouble(table.getValueAt(i, 5).toString());
            actualPrice = Double.parseDouble(txt_totalPrice3.getText()) - priceRemove;
        }
        txt_totalPrice3.setText(String.valueOf(actualPrice));
        clearTextFields();
    }
    private void btn_generatePurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generatePurchaseActionPerformed
        // TODO add your handling code here:
        MySQLOrderDAO orderDAO = new MySQLOrderDAO();

        int amount;
        Double tPrice;
        Date date;

        for (int i = 0; i < orderTable.getRowCount(); i++) {
            
            amount = Integer.parseInt(orderTable.getValueAt(i, 2).toString());
            tPrice = Double.parseDouble(orderTable.getValueAt(i, 4).toString());
            date = Date.valueOf(new java.sql.Date(dateChooser.getDate().getTime()).toString());
            int id = Integer.parseInt(orderTable.getValueAt(i, 0).toString());

            o = new Order(id, amount, tPrice, date);

            try {
                orderDAO.generateOrder(o);

            } catch (StoreException ex) {
                JOptionPane.showMessageDialog(null, "Error al generar orden", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

        JOptionPane.showMessageDialog(null, "Orden Relizada Correctamente", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        clearTextFields();
        txt_totalPrice3.setText("0.0");
        model.setRowCount(0);
    }//GEN-LAST:event_btn_generatePurchaseActionPerformed

    private void txt_searchProduct3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchProduct3KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_txt_searchProduct3KeyReleased

    private void txt_searchProduct3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_searchProduct3MouseClicked
        // TODO add your handling code here:
        txt_searchProduct3.setText("");
    }//GEN-LAST:event_txt_searchProduct3MouseClicked

    private void search() {
        String name = txt_searchProduct3.getText().trim();
        if (name.isEmpty()) {
            return;
        }
        try {

            Provider a = new Provider();
            Product p = new MySQLProductDAO().searchProductOrder(name, a);

            txt_productName.setText(p.getName());
            txt_productId.setText(String.valueOf(p.getProductId()));
            txt_provider.setText(a.getName());
            txt_productStock.setText(String.valueOf(p.getAmount()));
            txt_buyPrice.setText(String.valueOf(p.getBuyPrice()));

        } catch (StoreException e) {

        }
        txt_searchProduct3.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bll_totalPrice3;
    private newscomponents.RSButtonBigIcon_new btn_addProduct;
    private newscomponents.RSButtonBigIcon_new btn_cancelSale;
    private newscomponents.RSButtonBigIcon_new btn_deleteProduct;
    private newscomponents.RSButtonIcon_new btn_generatePurchase;
    private RSMaterialComponent.RSButtonIconTwo btn_searchProduct3;
    private newscomponents.RSDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane5;
    private RSMaterialComponent.RSTableMetroCustom orderTable;
    private javax.swing.JPanel pnl_totalPrice3;
    private necesario.TextField txt_buyPrice;
    private necesario.TextField txt_productId;
    private necesario.TextField txt_productName;
    private necesario.TextField txt_productSaleAmount;
    private necesario.TextField txt_productStock;
    private necesario.TextField txt_provider;
    private RSMaterialComponent.RSTextFieldMaterial txt_searchProduct3;
    private javax.swing.JLabel txt_totalPrice3;
    // End of variables declaration//GEN-END:variables
}
