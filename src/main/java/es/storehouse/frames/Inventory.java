/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.storehouse.frames;

import es.storehouse.models.Product;
import es.storehouse.models.Provider;
import es.storehouse.models.StoreException;
import es.storehouse.mysql.MySQLProductDAO;
import es.storehouse.mysql.MySQLProviderDAO;
import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dquintero
 */
public final class Inventory extends javax.swing.JInternalFrame {

    ArrayList<Object[]> data = new ArrayList<>();
    ArrayList<String> info = new ArrayList<>();
    DefaultTableModel model;
    DefaultComboBoxModel comboModel = new DefaultComboBoxModel();

    /**
     *
     * @throws StoreException
     */
    public Inventory() throws StoreException {
        initComponents();
        fillData();

        combo_Provider.setModel(comboModel);
        filLCombo();
    }

    public void filLCombo() throws StoreException {
        MySQLProviderDAO providerDAO = new MySQLProviderDAO();
        info = providerDAO.getList();
        for (int i = 0; i < info.size(); i++) {
            combo_Provider.addItem(info.get(i));
        }
        combo_Provider.setSelectedItem(null);
    }

    void fillData() {

        String[] columns = new String[]{"ID", "Producto", "Cantidad", "Precio de Compra", "Precio de Venta", "Proveedor"};
        model = new DefaultTableModel(null, columns);

        MySQLProductDAO productDAO = new MySQLProductDAO();

        try {
            data = productDAO.obtainAll();
            data.forEach(row -> model.addRow(row));
            productTable.setModel(model);

        } catch (StoreException e) {
            model.setRowCount(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_background = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new RSMaterialComponent.RSTableMetroCustom(){
            public boolean isCellEditable(int row, int column){
                return false;
            }

        };
        pnl_data = new javax.swing.JPanel();
        txt_id = new necesario.TextField();
        lbl_buyPrice = new RSMaterialComponent.RSLabelTextIcon();
        txt_productName = new necesario.TextField();
        lbl_productName = new RSMaterialComponent.RSLabelTextIcon();
        txt_amount = new necesario.TextField();
        txt_buyPrice = new necesario.TextField();
        txt_sellPrice = new necesario.TextField();
        lbl_sellPrice = new RSMaterialComponent.RSLabelTextIcon();
        lbl_amount = new RSMaterialComponent.RSLabelTextIcon();
        lbl_id = new RSMaterialComponent.RSLabelTextIcon();
        btn_cancel = new RSMaterialComponent.RSButtonMaterialIconTwo();
        btn_deleteProduct = new RSMaterialComponent.RSButtonMaterialIconTwo();
        btn_UpdateProduct = new RSMaterialComponent.RSButtonMaterialIconTwo();
        btn_insertProduct = new RSMaterialComponent.RSButtonMaterialIconTwo();
        lbl_productName1 = new RSMaterialComponent.RSLabelTextIcon();
        combo_Provider = new RSMaterialComponent.RSComboBox();

        setClosable(true);
        setTitle("Inventario");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnl_background.setBackground(new java.awt.Color(255, 255, 255));

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Cantidad", "Precio de Compra", "Precio de Venta", "Proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        productTable.setBackgoundHead(new java.awt.Color(32, 51, 46));
        productTable.setBackgoundHover(new java.awt.Color(32, 51, 46));
        productTable.setColorPrimaryText(new java.awt.Color(32, 51, 46));
        productTable.setColorSecundaryText(new java.awt.Color(32, 51, 46));
        productTable.setFont(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        productTable.setFontHead(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        productTable.setFontRowHover(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        productTable.setFontRowSelect(new java.awt.Font("Roboto", 1, 11)); // NOI18N
        productTable.setSelectionBackground(new java.awt.Color(108, 140, 110));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        pnl_data.setBackground(new java.awt.Color(108, 140, 110));

        txt_id.setEditable(false);
        txt_id.setBackground(new java.awt.Color(255, 255, 255));
        txt_id.setForeground(new java.awt.Color(32, 51, 46));
        txt_id.setEnabled(false);
        txt_id.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txt_id.setPlaceholder("");
        txt_id.setSelectionColor(new java.awt.Color(32, 51, 46));

        lbl_buyPrice.setForeground(new java.awt.Color(32, 51, 46));
        lbl_buyPrice.setText("Precio de Compra:");
        lbl_buyPrice.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_buyPrice.setIcons(null);

        txt_productName.setForeground(new java.awt.Color(32, 51, 46));
        txt_productName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txt_productName.setPlaceholder("");
        txt_productName.setSelectionColor(new java.awt.Color(32, 51, 46));

        lbl_productName.setForeground(new java.awt.Color(32, 51, 46));
        lbl_productName.setText("Producto:");
        lbl_productName.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_productName.setIcons(null);

        txt_amount.setForeground(new java.awt.Color(32, 51, 46));
        txt_amount.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txt_amount.setPlaceholder("");
        txt_amount.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_buyPrice.setForeground(new java.awt.Color(32, 51, 46));
        txt_buyPrice.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txt_buyPrice.setPlaceholder("");
        txt_buyPrice.setSelectionColor(new java.awt.Color(32, 51, 46));

        txt_sellPrice.setForeground(new java.awt.Color(32, 51, 46));
        txt_sellPrice.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txt_sellPrice.setPlaceholder("");
        txt_sellPrice.setSelectionColor(new java.awt.Color(32, 51, 46));

        lbl_sellPrice.setForeground(new java.awt.Color(32, 51, 46));
        lbl_sellPrice.setText("Precio de Venta:");
        lbl_sellPrice.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_sellPrice.setIcons(null);

        lbl_amount.setForeground(new java.awt.Color(32, 51, 46));
        lbl_amount.setText("Cantidad: ");
        lbl_amount.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_amount.setIcons(null);

        lbl_id.setForeground(new java.awt.Color(32, 51, 46));
        lbl_id.setText("ID:");
        lbl_id.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_id.setIcons(null);

        btn_cancel.setBackground(new java.awt.Color(32, 51, 46));
        btn_cancel.setText("Cancelar");
        btn_cancel.setBackgroundHover(new java.awt.Color(32, 51, 46));
        btn_cancel.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CANCEL);
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_deleteProduct.setBackground(new java.awt.Color(32, 51, 46));
        btn_deleteProduct.setText("Eliminar Producto");
        btn_deleteProduct.setBackgroundHover(new java.awt.Color(32, 51, 46));
        btn_deleteProduct.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btn_deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteProductActionPerformed(evt);
            }
        });

        btn_UpdateProduct.setBackground(new java.awt.Color(32, 51, 46));
        btn_UpdateProduct.setText("Actualizar Producto");
        btn_UpdateProduct.setBackgroundHover(new java.awt.Color(32, 51, 46));
        btn_UpdateProduct.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.UPDATE);
        btn_UpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateProductActionPerformed(evt);
            }
        });

        btn_insertProduct.setBackground(new java.awt.Color(32, 51, 46));
        btn_insertProduct.setText("Insertar Producto");
        btn_insertProduct.setBackgroundHover(new java.awt.Color(32, 51, 46));
        btn_insertProduct.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ADD);
        btn_insertProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertProductActionPerformed(evt);
            }
        });

        lbl_productName1.setForeground(new java.awt.Color(32, 51, 46));
        lbl_productName1.setText("Proveedor:");
        lbl_productName1.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        lbl_productName1.setIcons(null);

        combo_Provider.setColorArrow(new java.awt.Color(32, 51, 46));
        combo_Provider.setColorBorde(new java.awt.Color(32, 51, 46));
        combo_Provider.setColorFondo(new java.awt.Color(32, 51, 46));
        combo_Provider.setColorSeleccion(new java.awt.Color(32, 51, 46));

        javax.swing.GroupLayout pnl_dataLayout = new javax.swing.GroupLayout(pnl_data);
        pnl_data.setLayout(pnl_dataLayout);
        pnl_dataLayout.setHorizontalGroup(
            pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_productName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_productName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txt_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addComponent(lbl_sellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_sellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lbl_productName1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_insertProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_deleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_UpdateProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(161, 161, 161))
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(combo_Provider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnl_dataLayout.setVerticalGroup(
            pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addComponent(btn_insertProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_deleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_UpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(pnl_dataLayout.createSequentialGroup()
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_productName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_Provider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_buyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_sellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnl_backgroundLayout = new javax.swing.GroupLayout(pnl_background);
        pnl_background.setLayout(pnl_backgroundLayout);
        pnl_backgroundLayout.setHorizontalGroup(
            pnl_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnl_backgroundLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnl_backgroundLayout.setVerticalGroup(
            pnl_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_backgroundLayout.createSequentialGroup()
                .addComponent(pnl_data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        // TODO add your handling code here:
        txt_id.setText(productTable.getValueAt(productTable.getSelectedRow(), 0).toString());
        txt_productName.setText(productTable.getValueAt(productTable.getSelectedRow(), 1).toString());
        txt_amount.setText(productTable.getValueAt(productTable.getSelectedRow(), 2).toString());
        txt_buyPrice.setText(productTable.getValueAt(productTable.getSelectedRow(), 3).toString());
        txt_sellPrice.setText(productTable.getValueAt(productTable.getSelectedRow(), 4).toString());
        combo_Provider.getModel().setSelectedItem(productTable.getValueAt(productTable.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_productTableMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if (productTable.getSelectedRow() > 0) {
            productTable.clearSelection();
        }
    }//GEN-LAST:event_formMouseClicked

    void clearTextFields() {
        txt_amount.setText("");
        txt_buyPrice.setText("");
        txt_id.setText("");
        txt_sellPrice.setText("");
        txt_productName.setText("");
        combo_Provider.setSelectedItem(null);
    }

    private void btn_insertProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertProductActionPerformed
        // TODO add your handling code here:

        if (txt_amount.getText().isEmpty() || txt_buyPrice.getText().isEmpty()
                || txt_productName.getText().isEmpty() || combo_Provider.getSelectedItem() == null
                || txt_sellPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Aviso!", JOptionPane.INFORMATION_MESSAGE);

        } else {

            String provider = combo_Provider.getSelectedItem().toString();
            String productName = txt_productName.getText();
            int amount = Integer.parseInt(txt_amount.getText());
            double buyPrice = Double.parseDouble(txt_buyPrice.getText());
            double sellPrice = Double.parseDouble(txt_sellPrice.getText());

            Product p = new Product(productName, amount, buyPrice, sellPrice);
            Provider a = new Provider(provider);
            p.setName(productName);
            p.setAmount(amount);
            p.setBuyPrice(buyPrice);
            p.setSellPrice(sellPrice);
            a.setName(provider);

            MySQLProductDAO productDAO = new MySQLProductDAO();

            try {
                productDAO.insertProduct(p, a);

                clearTextFields();
            } catch (StoreException ex) {
                fillData();
            }
        }


    }//GEN-LAST:event_btn_insertProductActionPerformed

    private void btn_deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteProductActionPerformed
        // TODO add your handling code here:
        MySQLProductDAO productDAO = new MySQLProductDAO();
        int id = Integer.parseInt(txt_id.getText());

        Product p = new Product(id);
        p.setProductId(id);

        try {
            productDAO.delete(p);
        } catch (StoreException ex) {

            fillData();
            productTable.clearSelection();
            clearTextFields();

        }

    }//GEN-LAST:event_btn_deleteProductActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        productTable.clearSelection();
        clearTextFields();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_UpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateProductActionPerformed
        // TODO add your handling code here:
        if (txt_amount.getText().isEmpty() || txt_buyPrice.getText().isEmpty()
                || txt_productName.getText().isEmpty() || combo_Provider.getSelectedItem() == null
                || txt_sellPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Aviso!", JOptionPane.INFORMATION_MESSAGE);

        } else {

            MySQLProductDAO productDAO = new MySQLProductDAO();

            String provider = combo_Provider.getSelectedItem().toString();
            int id = Integer.parseInt(txt_id.getText());
            String productName = txt_productName.getText();
            int amount = Integer.parseInt(txt_amount.getText());
            double buyPrice = Double.parseDouble(txt_buyPrice.getText());
            double sellPrice = Double.parseDouble(txt_sellPrice.getText());

            Product p = new Product(id, productName, amount, buyPrice, sellPrice);
            Provider a = new Provider(provider);

            p.setProductId(id);
            p.setName(productName);
            p.setAmount(amount);
            p.setBuyPrice(buyPrice);
            p.setSellPrice(sellPrice);
            a.setName(provider);

            try {

                productDAO.updateProduct(p, a);

            } catch (StoreException ex) {
                fillData();
                productTable.clearSelection();
                clearTextFields();
            }
        }
    }//GEN-LAST:event_btn_UpdateProductActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        fillData();
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconTwo btn_UpdateProduct;
    private RSMaterialComponent.RSButtonMaterialIconTwo btn_cancel;
    private RSMaterialComponent.RSButtonMaterialIconTwo btn_deleteProduct;
    private RSMaterialComponent.RSButtonMaterialIconTwo btn_insertProduct;
    private RSMaterialComponent.RSComboBox combo_Provider;
    private javax.swing.JScrollPane jScrollPane1;
    private RSMaterialComponent.RSLabelTextIcon lbl_amount;
    private RSMaterialComponent.RSLabelTextIcon lbl_buyPrice;
    private RSMaterialComponent.RSLabelTextIcon lbl_id;
    private RSMaterialComponent.RSLabelTextIcon lbl_productName;
    private RSMaterialComponent.RSLabelTextIcon lbl_productName1;
    private RSMaterialComponent.RSLabelTextIcon lbl_sellPrice;
    private javax.swing.JPanel pnl_background;
    private javax.swing.JPanel pnl_data;
    private RSMaterialComponent.RSTableMetroCustom productTable;
    private necesario.TextField txt_amount;
    private necesario.TextField txt_buyPrice;
    private necesario.TextField txt_id;
    private necesario.TextField txt_productName;
    private necesario.TextField txt_sellPrice;
    // End of variables declaration//GEN-END:variables
}
